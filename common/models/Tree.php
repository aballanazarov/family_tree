<?php

namespace common\models;

use common\services\DateTimeHelper;
use Yii;

/**
 * @property int $id
 * @property string $name Полное имя человека
 * @property int|null $birthday День рождения человека
 * @property int|null $death_date День рождения человека
 * @property string|null $spouse_name Полное имя супруг(а)
 * @property int|null $spouse_birthday День рождения супруг(а)
 * @property int|null $spouse_death_date День рождения человека
 * @property int|null $parent_id Родительский идентификатор
 * @property int $author_id Автор
 * @property int $created_at
 * @property int|null $updated_at
 *
 * @property Tree $parent
 * @property Tree[] $trees
 * @property User $author
 */
class Tree extends \yii\db\ActiveRecord
{
    public static function tableName()
    {
        return 'tree';
    }


    public function rules()
    {
        return [
            [['created_at'], 'default', 'value' => time()],
            [['author_id'], 'default', 'value' => Yii::$app->user->identity->getId()],
            [['name', 'author_id', 'created_at'], 'required'],
            [['birthday', 'death_date', 'spouse_birthday', 'spouse_death_date', 'parent_id', 'created_at', 'updated_at'], 'integer'],
            [['name', 'spouse_name'], 'string', 'max' => 255],
            [['parent_id'], 'exist', 'skipOnError' => true, 'targetClass' => Tree::class, 'targetAttribute' => ['parent_id' => 'id']],
            [['author_id'], 'exist', 'skipOnError' => true, 'targetClass' => User::class, 'targetAttribute' => ['author_id' => 'id']],
        ];
    }


    public function beforeValidate()
    {
        if (!empty($this->birthday) && is_string($this->birthday))
            $this->birthday = DateTimeHelper::strToTime($this->birthday);

        if (!empty($this->death_date) && is_string($this->death_date))
            $this->death_date = DateTimeHelper::strToTime($this->death_date);

        if (!empty($this->spouse_birthday) && is_string($this->spouse_birthday))
            $this->spouse_birthday = DateTimeHelper::strToTime($this->spouse_birthday);

        if (!empty($this->spouse_death_date) && is_string($this->spouse_death_date))
            $this->spouse_death_date = DateTimeHelper::strToTime($this->spouse_death_date);

        if (!empty($this->created_at))
            $this->updated_at = time();

        if (empty($this->created_at))
            $this->created_at = time();

        if (empty($this->author_id))
            $this->author_id = Yii::$app->user->identity->getId();

        return parent::beforeValidate(); // TODO: Change the autogenerated stub
    }


    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'name' => 'Name',
            'birthday' => 'Birthday',
            'death_date' => 'Death Date',
            'spouse_name' => 'Spouse Name',
            'spouse_birthday' => 'Spouse Birthday',
            'spouse_death_date' => 'Spouse Death Date',
            'parent_id' => 'Parent ID',
            'author_id' => 'Author ID',
            'created_at' => 'Created At',
            'updated_at' => 'Updated At',
        ];
    }


    public function getParent()
    {
        return $this->hasOne(Tree::class, ['id' => 'parent_id']);
    }


    public function getTrees()
    {
        return $this->hasMany(Tree::class, ['parent_id' => 'id']);
    }


    public function getAuthor()
    {
        return $this->hasOne(User::class, ['id' => 'author_id']);
    }
}
